unzip("activity.zip")
activity<-read.csv("activity.csv")
averagesteps<- aggregate(steps~interval+date, data=activity, FUN=mean)
View(averagesteps)
averagesteps<- aggregate(steps~date, data=activity, FUN=mean)
View(averagesteps)
averagesteps<- aggregate(steps~interval, data=activity, FUN=mean)
View(averagesteps)
library("sqldf", lib.loc="/home/javier/R/x86_64-pc-linux-gnu-library/3.1")
?sqldf
q()
activity<-read.csv("activity.csv")
View(activity)
a<-sqldf("select interval avg(steps) from activity group by date")
library(sqldf)
a<-sqldf("select interval avg(steps) from activity group by date")
a<-sqldf("select interval avg(steps) from activity ")
a<-sqldf("select interval from activity ")
a<-sqldf("select interval avg(steps)from activity ")
a<-sqldf("select interval avg(steps) from activity group by date")
averagesteps<- aggregate(steps~interval+date, data=activity, FUN=mean)
a<-sqldf("select interval avg(steps) from averagesteps group by date")
str(activity)
a<-sqldf("select interval sum(steps) from averagesteps group by date")
a<-sqldf("select avg(steps) from averagesteps group by date")
View(a)
a<-sqldf("select interval avg(steps) from averagesteps group by date")
averagesteps$interval<-as.character(averagesteps$interval)
a<-sqldf("select interval avg(steps) from averagesteps group by date")
a<-sqldf("select interval avg(steps) from averagesteps group by date")
a<-sqldf("select interval avg(steps) from averagesteps group by date")
a<-sqldf("select interval avg(steps) from averagesteps group by interval")
a<-sqldf("select interval avg(steps) from averagesteps group by date")
a<-sqldf("select avg(steps) from averagesteps group by date")
q()
activity<-read.csv("activity.csv")
a<-aggregate(steps~date+interval,data=activity,mean)
View(a)
a<-aggregate(steps~interval,data=activity,mean)
View(a)
with(a,plot(interval,steps)
type="l)"
with(a,plot(interval,steps,type="l"))
with(aggregate(steps~interval,data=activity,mean),plot(interval,steps,type="l"))
q()
q()
activity<-read.csv("activity.csv")
with(aggregate(steps~interval,data=activity,mean),plot(interval,steps,type="l"))
?title
title("Average steps taken across the 5-minutes inter
with(aggregate(steps~interval,data=activity,mean),plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval")
?labels
with(aggregate(steps~interval,data=activity,mean),plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval")
xlab("5-minutes interval")
with(aggregate(steps~interval,data=activity,mean),plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval")
labels(x="5-minutes interval")
with(aggregate(steps~interval,data=activity,mean),plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval")
labels(xlab="5-minutes interval")
labels
labels()
?lab
with(aggregate(steps~interval,data=activity,mean),plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval",x="5-minutes interval")
q()
activity<-read.csv("activity.csv")
with(aggregate(steps~interval,data=activity,mean),plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval",x="5-minutes interval")
with(aggregate(steps~interval,data=activity,mean),plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval")
a<-aggregate(steps~interval,data=activity,mean)
View(a)
max(a$steps)
a[,steps==max(a$steps)]
a[,a$steps==max(a$steps)]
a[,a$steps==max(a$steps)]
b<-max(a$steps)
a[,a$steps==b]
c<-a$steps==b
head(c)
c<-a$steps==max(a$steps)
head(c)
a[,a$steps==max(a$steps)]
a[,c]
a[c]
a[c,]
a[a$steps==max(a$steps),]
averageInterval<-aggregate(steps~interval,data=activity,mean)
averageInterval<-aggregate(steps~interval,data=activity,mean)
with(averageInterval,plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval")
verageInterval[averageInterval$steps==max(averageInterval$steps),]
averageInterval[averageInterval$steps==max(averageInterval$steps),]
q()
#Reproducible Reasearch Assignment 1
#The data for this asssigment can be downloaded from the course web site:
#https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip
#1) Loading and processing  the data
#unzip the activity data
unzip("activity.zip")
activity<-read.csv("activity.csv")
#processing the data
#turn the date variable into a date type variable
activity$date<-as.Date(activity$date)
#2) What is mean total number of steps taken per day?
#total of steps taken per day
totalsteps<-with(activity,tapply(steps,as.factor(date),sum))
# 2.1 Histogram of the total number of steps taken each day
hist(totalsteps, main="Total Number of Steps Taken Each Day",xlab="Total steps",col="blue")
# 2.2 the mean and median total number of steps taken per day
#Mean
mean(totalsteps,na.rm=T)
#Median
median(totalsteps,na.rm=T)
#3) What is the average daily activity pattern?
#time series plot
averageInterval<-aggregate(steps~interval,data=activity,mean)
with(averageInterval,plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval")
#maximum number steps
averageInterval[averageInterval$steps==max(averageInterval$steps),]
#4) Imputing missing values
#4.1 total number of missing values in the dataset
sum(is.na(activity))
#4.2 filling missindg data
#4.3 data set without missing values
activity_no_missing<-activity
for(i in 1:length(activity_no_missing[,1])){
if(is.na(activity_no_missing[i,1])){
b<-activity_no_missing[activity_no_missing[,3]==activity_no_missing[i,3],]
activity_no_missing[i,1]<-round(mean(b[,1],na.rm=T))
}
}
#4.4 Histogram
#total of steps taken per day
totalsteps2<-with(activity_no_missing,tapply(steps,as.factor(date),sum))
# 2.1 Histogram of the total number of steps taken each day
hist(totalsteps2, main="Total Number of Steps Taken Each Day",xlab="Total steps",col="red")
# 2.2 the mean and median total number of steps taken per day
#Mean
mean(totalsteps2,na.rm=T)
#Median
median(totalsteps2,na.rm=T)
#5) weekends and weekdays
for(i in 1:length(activity_no_missing[,1])){
if(!(weekdays(activity_no_missing[i,2]) %in% c("sábado","domingo"))){
activity_no_missing[i,4]<-"weekday"
}else{
activity_no_missing[i,4]<-"weekend"
}
}
activity_no_missing[,4]<-as.factor(activity_no_missing[,4])
colnames(activity_no_missing)[4]<-"weekdayOrWeekend"
averageIntervalWeek<-yyaggregate(steps~interval+weekdayOrWeekend,data=activity_no_missing,mean)
library(lattice)
with(averageIntervalWeek,xyplot(round(steps)~interval|weekdayOrWeekend,layout=c(1,2),type="l"))
averageIntervalWeek<-aggregate(steps~interval+weekdayOrWeekend,data=activity_no_missing,mean)
library(lattice)
with(averageIntervalWeek,xyplot(round(steps)~interval|weekdayOrWeekend,layout=c(1,2),type="l"))
q()
ls()
sum(is.na(activity))
#Reproducible Reasearch Assignment 1
#The data for this asssigment can be downloaded from the course web site:
#https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip
#1) Loading and processing  the data
#unzip the activity data
unzip("activity.zip")
activity<-read.csv("activity.csv")
#processing the data
#turn the date variable into a date type variable
activity$date<-as.Date(activity$date)
#2) What is mean total number of steps taken per day?
#total of steps taken per day
totalsteps<-with(activity,tapply(steps,as.factor(date),sum))
# 2.1 Histogram of the total number of steps taken each day
hist(totalsteps, main="Total Number of Steps Taken Each Day",xlab="Total steps",col="blue")
# 2.2 the mean and median total number of steps taken per day
#Mean
mean(totalsteps,na.rm=T)
#Median
median(totalsteps,na.rm=T)
#3) What is the average daily activity pattern?
#time series plot
averageInterval<-aggregate(steps~interval,data=activity,mean)
with(averageInterval,plot(interval,steps,type="l"))
title("Average steps taken across the 5-minutes interval")
#maximum number steps
averageInterval[averageInterval$steps==max(averageInterval$steps),]
#4) Imputing missing values
#4.1 total number of missing values in the dataset
sum(is.na(activity))
#4.2 filling missindg data
#4.3 data set without missing values
activity_no_missing<-activity
for(i in 1:length(activity_no_missing[,1])){
if(is.na(activity_no_missing[i,1])){
b<-activity_no_missing[activity_no_missing[,3]==activity_no_missing[i,3],]
activity_no_missing[i,1]<-round(mean(b[,1],na.rm=T))
}
}
#4.4 Histogram
#total of steps taken per day
totalsteps2<-with(activity_no_missing,tapply(steps,as.factor(date),sum))
# 2.1 Histogram of the total number of steps taken each day
hist(totalsteps2, main="Total Number of Steps Taken Each Day",xlab="Total steps",col="red")
# 2.2 the mean and median total number of steps taken per day
#Mean
mean(totalsteps2,na.rm=T)
#Median
median(totalsteps2,na.rm=T)
#5) weekends and weekdays
for(i in 1:length(activity_no_missing[,1])){
if(!(weekdays(activity_no_missing[i,2]) %in% c("sábado","domingo"))){
activity_no_missing[i,4]<-"weekday"
}else{
activity_no_missing[i,4]<-"weekend"
}
}
activity_no_missing[,4]<-as.factor(activity_no_missing[,4])
colnames(activity_no_missing)[4]<-"weekdayOrWeekend"
averageIntervalWeek<-aggregate(steps~interval+weekdayOrWeekend,data=activity_no_missing,mean)
library(lattice)
with(averageIntervalWeek,xyplot(round(steps)~interval|weekdayOrWeekend,layout=c(1,2),type="l"))
q()
q()
q()
#Reproducible Reasearch Assignment 1
#The data for this asssigment can be downloaded from the course web site:
#https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip
#1) Loading and processing  the data
#unzip the activity data
unzip("activity.zip")
activity<-read.csv("activity.csv")
#processing the data
#turn the date variable into a date type variable
activity$date<-as.Date(activity$date)
#2) What is mean total number of steps taken per day?
#total of steps taken per day
totalsteps<-with(activity,tapply(steps,as.factor(date),sum))
# 2.1 Histogram of the total number of steps taken each day
hist(totalsteps, main="Total Number of Steps Taken Each Day",xlab="Total steps",col="blue")
# 2.2 the mean and median total number of steps taken per day
#Mean
mean(totalsteps,na.rm=T)
#Median
median(totalsteps,na.rm=T)
q()
